$((function(){const t=$('[data-htsa-id="mobileSidebar"]'),e=$('[data-htsa-id="mobileMenu"]'),a=($('[data-htsa-id="headerMenu"]'),$('[data-htsa-id="searchModal"]')),n=window.counterUp.default,o=$('[data-htsa-id="statisticsValue"]'),i=$('[data-htsa-id="semanticUIEmbed"]'),s=$('[data-htsa-id="frontpageCarouselLeft"]'),l=$('[data-htsa-id="featuredReviews"]'),m=$('[data-htsa-id="featuredBlogCarousel"]'),d=$('[data-htsa-id="semanticUICheckbox"]'),r=$('[data-htsa-id="contactForm"]'),h=$('[data-htsa-id="commentForm"]'),g=$('[data-htsa-id="newsletterForm"]'),u=$('[data-htsa-id="scrollToTop"]'),c=$("footer");t.length&&t.first().sidebar({dimPage:!1}).sidebar("attach events",'[data-htsa-toggle="mobileSidebar"]'),e.length&&e.metisMenu({triggerElement:".htsa-dropdown-link",parentTrigger:".htsa-dropdown-item",subMenu:".htsa-dropdown-menu"}),a.length&&a.first().modal({blurring:!0,closable:!1}).modal("attach events",'[data-htsa-toggle="searchModal"]'),i.length&&i.embed(),o.length&&o.each((function(){let t=this;new Waypoint({element:t,handler:function(e){n(t,{duration:3e3}),this.destroy()},offset:"bottom-in-view"})})),s.length&&tns({container:'[data-htsa-id="frontpageCarouselLeft"]',speed:700,items:1,autoplay:!0,controls:!1,nav:!1,autoplayButtonOutput:!1}),m.length&&tns({container:'[data-htsa-id="featuredBlogCarousel"]',items:1,autoplay:!0,controls:!1,autoplayButtonOutput:!1}),l.length&&tns({container:'[data-htsa-id="featuredReviews"]',items:1,gutter:24,autoplay:!0,controls:!1,nav:!1,autoplayButtonOutput:!1,responsive:{768:{items:2},991:{items:3},1400:{items:4}}}),d.length&&d.checkbox(),r.length&&r.form({fields:{htsaContactFormName:["empty","maxLength[100]"],htsaContactFormEmail:["empty","email","maxLength[100]"],htsaContactFormMessage:["empty","maxLength[2000]"]},inline:!0}),h.length&&h.form({fields:{htsaCommentFormName:["empty","maxLength[100]"],htsaCommentFormEmail:["empty","email","maxLength[100]"],htsaCommentFormWebsite:["empty","maxLength[100]"],htsaCommentFormComment:["empty","maxLength[800]"]},inline:!0}),g.length&&g.form({fields:{htsaNewsletterFormName:["empty","maxLength[100]"],htsaNewsletterFormEmail:["empty","email","maxLength[100]"]},inline:!0}),u.length&&$.scrollUp({scrollFrom:"bottom",scrollTrigger:u}),c.length&&u.length&&c.visibility({once:!1,onTopVisible:function(){u.fadeIn()},onTopVisibleReverse:function(){u.fadeOut()}}),$(".ui.rating").length&&$(".ui.rating").rating({clearable:!1,interactive:!1})})),$(window).on("load",(function(){const t=$('[data-htsa-id="preloader"]');t.length&&t.fadeOut()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,